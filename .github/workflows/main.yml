name: App deployment on Kubernetes

on: push
env:
  DOCKER_USER: ttyeri

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build image and push to Dockerhub
    outputs:
       image-name: ${{ steps.set-image-name.outputs.image-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: set-image-name
        run: |
          IMAGE_NAME=$DOCKER_USER/myweather:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup kubeconfig
        run: |
          mkdir -p ${HOME}/.kube
          echo "${{ secrets.KUBECONFIG_CICD }}" | base64 -d > ${HOME}/.kube/config

      - name: Setup context
        run: kubectl config use-context cicd-sa-ctx

      - name: Check nodes
        run: |
          kubectl get nodes
          kubectl get pods

      - name: Deploy app to Kubernetes
        run: |
          IMAGE_NAME=$DOCKER_USER/myweather:latest
          echo "Image name: ${IMAGE_NAME}"
          sed -i.bak "s|MY_IMAGE|${IMAGE_NAME}|" yamls/deployment.yaml
          kubectl apply -f yamls/deployment.yaml
          kubectl apply -f yamls/svc.yaml
